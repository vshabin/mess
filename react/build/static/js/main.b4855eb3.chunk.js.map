{"version":3,"sources":["redux/reducers/attachments.js","redux/reducers/dialogs.js","redux/reducers/messages.js","redux/reducers/user.js","assets/img/wave.svg","assets/img/play.svg","assets/img/pause.svg","assets/img/readed.svg","assets/img/noreaded.svg","redux/reducers sync /^/.*$","core/axios.js","utils/api/dialogs.js","utils/api/messages.js","utils/api/user.js","utils/api/files.js","core/socket.js","redux/actions/dialogs.js","redux/actions/messages.js","utils/helpers/validateField.js","utils/helpers/openNotification.js","utils/helpers/isAudio.js","redux/actions/user.js","redux/actions/attachments.js","containers/Dialogs.js","containers/Messages.js","containers/ChatInput.js","containers/Status.js","containers/Sidebar.js","components/Sidebar/index.js","components/Button/index.js","components/Block/index.js","components/Message/index.jsx","utils/helpers/convertCurrentTime.js","components/Messages/index.js","components/DialogItem/index.jsx","components/Time/index.js","components/IconReaded/index.js","components/Dialogs/index.js","components/Avatar/index.js","utils/helpers/generateAvatarFromHash.js","components/Status/index.js","components/ChatInput/index.js","components/FormField/index.jsx","components/UploadFiles/index.jsx","modules/LoginForm/components/LoginForm.jsx","utils/validate.js","redux/store.js","modules/LoginForm/index.js","modules/LoginForm/containers/LoginForm.js","modules/RegisterForm/components/RegisterForm.jsx","modules/RegisterForm/index.js","modules/RegisterForm/containers/RegisterForm.js","pages/Auth/components/CheckEmailInfo.jsx","pages/Auth/index.jsx","pages/Home/index.jsx","App.js","index.js","redux/reducers/index.js"],"names":["initialState","items","__webpack_exports__","state","arguments","length","undefined","_ref","type","payload","Object","E_chat_react_chat_tutorial_master_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","filter","item","uid","currentDialogId","window","location","pathname","split","isLoading","map","dialog","_id","dialogId","lastMessage","readed","E_chat_react_chat_tutorial_master_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","concat","E_chat_react_chat_tutorial_master_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","message","data","token","localStorage","isAuth","module","exports","__webpack_require__","p","./","./attachments","./attachments.js","./dialogs","./dialogs.js","./index","./index.js","./messages","./messages.js","./user","./user.js","webpackContext","req","id","webpackContextResolve","e","Error","code","keys","resolve","axios","defaults","baseURL","origin","headers","common","api_dialogs","get","partner","text","post","api_messages","delete","attachments","dialog_id","api_user","postData","hash","query","api_files","file","formData","FormData","append","Content-Type","socket","io","replace","Actions","setDialogs","updateReadedStatus","userId","setCurrentDialogId","dispatch","emit","fetchDialogs","dialogsApi","then","_ref2","setMessages","addMessage","getState","dialogs","fetchSendMessage","messagesApi","setIsLoading","bool","removeMessageById","confirm","catch","fetchMessages","_ref3","validateField","key","touched","errors","openNotification","_ref$type","title","_ref$duration","duration","notification","description","isAudio","ext","setUserData","setIsAuth","fetchUserData","userApi","err","response","status","fetchUserLogin","fetchUserRegister","setAttachments","removeAttachment","connect","dialogsActions","_useState","useState","_useState2","slicedToArray","inputValue","setValue","_useState3","Array","from","_useState4","filtred","setFiltredItems","onChangeInput","value","author","fullname","toLowerCase","indexOf","useEffect","on","removeListener","react_default","a","createElement","components_Dialogs","onSearch","messages","user","currentDialog","find","messagesActions","empty","previewImage","setPreviewImage","blockHeight","setBlockHeight","_useState5","_useState6","isTyping","setIsTyping","typingTimeoutId","messagesRef","useRef","onNewMessage","toggleIsTyping","clearInterval","setTimeout","current","scrollTo","components_Messages","blockRef","onRemoveMessage","_ref5","objectSpread","attachmentsActions","props","navigator","getUserMedia","mozGetUserMedia","msGetUserMedia","webkitGetUserMedia","isRecording","setIsRecording","mediaRecorder","setMediaRecorder","_useState7","_useState8","emojiPickerVisible","setShowEmojiPicker","_useState9","_useState10","setLoading","onRecording","stream","recorder","MediaRecorder","start","onstart","onstop","ondataavailable","File","filesApi","sendAudio","onError","console","log","handleOutsideClick","el","contains","target","audioId","sendMessage","stop","onSelectFiles","asyncToGenerator","regenerator_default","mark","_callee","files","uploaded","_loop","i","wrap","_context2","prev","next","_context","Math","round","random","toConsumableArray","name","_ref4","filename","url","this","delegateYield","_x","apply","document","querySelector","addEventListener","bind","removeEventListener","components_ChatInput","toggleEmojiPicker","addEmoji","colons","trim","handleSendMessage","keyCode","onRecord","audio","onHideRecording","currentDialogObj","components_Status","online","isOnline","visible","setVisible","setInputValue","messageText","setMessagaText","users","setUsers","_useState11","_useState12","selectedUserId","setSelectedUserId","onClose","components_Sidebar","onShow","onSelectUser","onModalOk","onChangeTextArea","Option","Select","TextArea","Input","Sidebar","options","className","es_icon","es_button","onClick","shape","icon","containers_Dialogs","modal","onCancel","footer","disabled","loading","es_form","Item","label","es_select","onChange","onSelect","notFoundContent","style","width","defaultActiveFirstOption","showArrow","filterOption","placeholder","showSearch","autosize","minRows","maxRows","defaultProps","Button","assign","classNames","button--large","size","Block","children","MessageAudio","audioSrc","audioElem","isPlaying","setIsPlaying","progress","setProgress","currentTime","setCurrentTime","volume","ref","src","preload","pause","play","pauseSvg","alt","playSvg","waveSvg","number","mins","floor","secs","toFixed","convertCurrentTime","Message","avatar","date","isMe","message--isme","message--is-typing","message--is-audio","message--image","components_IconReaded","isReaded","popover","content","trigger","components_Avatar","reactStringReplace","match","dist_es","emoji","set","color","fontSize","Message_MessageAudio","renderAttachment","components_Time","Messages","height","messages--loading","spin","tip","components_Message","DialogItem","createdAt","undread","created_at","react_router_dom","to","dialogs__item--online","dialogs__item--selected","isToday","format","renderLastMessage","Time","react","distanceInWordsToNow","addSuffix","locale","ruLocale","IconReaded","readedSvg","noReadedSvg","Dialogs","input","Search","orderBy","components_DialogItem","image","Empty","PRESENTED_IMAGE_SIMPLE","Avatar","_generateAvatarFromHa","_hash$substr$split$ma","substr","char","charCodeAt","_hash$substr$split$ma2","r","g","b","tinycolor","lighten","saturate","toHexString","colorLighten","generateAvatarFromHash","firstChar","toUpperCase","background","Status","status--online","ChatInput","emojiTag","ChatInput_TextArea","onKeyUp","dist","onFiles","containerProps","uploadProps","accept","multiple","components_UploadFiles","FormField","handleChange","handleBlur","values","validateStatus","help","hasFeedback","prefix","onBlur","getBase64","Promise","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","UploadFiles","previewVisible","fileList","setState","handlePreview","preview","originFileObj","sent","es_upload","action","listType","onPreview","onRemove","LoginForm","handleSubmit","isValid","isSubmitting","components_Block","onSubmit","email","password","components_Button","utils_validate","rules","test","password_2","forEach","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","thunk","store","createStore","rootReducer","applyMiddleware","withFormik","enableReinitialize","mapPropsToValues","validate","validateForm","setSubmitting","userActions","history","push","displayName","RegisterForm","components_FormField","renderTextInfo","verified","CheckEmailInfo","search","setVerified","checking","setChecking","info","setInfo","setStatus","subTitle","extra","Auth","react_router","exact","path","component","withRouter","pop","containers_Sidebar","containers_Status","containers_Messages","containers_ChatInput","render","pages_Home","ReactDOM","es","src_App","getElementById","redux__WEBPACK_IMPORTED_MODULE_0__","combineReducers","reduce","initial","require","default"],"mappings":"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","file":"static/js/main.b4855eb3.chunk.js","sourcesContent":["const initialState = {\n  items: []\n};\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case \"ATTACHMENTS:SET_ITEMS\":\n      return {\n        ...state,\n        items: payload\n      };\n    case \"ATTACHMENTS:REMOVE_ITEM\":\n      return {\n        ...state,\n        items: state.items.filter(item => item.uid !== payload.uid)\n      };\n    default:\n      return state;\n  }\n};\n","const initialState = {\n  items: [],\n  currentDialogId: window.location.pathname.split('dialog/')[1],\n  isLoading: false,\n};\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case 'DIALOGS:SET_ITEMS':\n      return {\n        ...state,\n        items: payload,\n      };\n    case 'DIALOGS:LAST_MESSAGE_READED_STATUS':\n      return {\n        ...state,\n        items: state.items.map(dialog => {\n          if (dialog._id === payload.dialogId) {\n            dialog.lastMessage.readed = true;\n          }\n          return dialog;\n        }),\n      };\n    case 'DIALOGS:SET_CURRENT_DIALOG_ID':\n      return {\n        ...state,\n        currentDialogId: payload,\n      };\n    default:\n      return state;\n  }\n};\n","const initialState = {\n  items: [],\n  isLoading: false,\n};\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case 'MESSAGES:ADD_MESSAGE':\n      return {\n        ...state,\n        items: [...state.items, payload],\n      };\n    case 'MESSAGES:SET_ITEMS':\n      return {\n        ...state,\n        items: payload,\n        isLoading: false,\n      };\n    case 'DIALOGS:LAST_MESSAGE_READED_STATUS':\n      return {\n        ...state,\n        items: state.items.map(message => {\n          if (message.dialog._id === payload.dialogId) {\n            message.readed = true;\n          }\n          return message;\n        }),\n      };\n    case 'MESSAGES:REMOVE_MESSAGE':\n      return {\n        ...state,\n        items: state.items.filter(message => message._id !== payload),\n      };\n    case 'MESSAGES:SET_IS_LOADING':\n      return {\n        ...state,\n        isLoading: payload,\n      };\n    default:\n      return state;\n  }\n};\n","const initialState = {\n  data: null,\n  token: window.localStorage.token,\n  isAuth: !!window.localStorage.token\n};\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case \"USER:SET_DATA\":\n      return {\n        ...state,\n        data: payload,\n        isAuth: true,\n        token: window.localStorage.token\n      };\n    case \"USER:SET_IS_AUTH\":\n      return {\n        ...state,\n        isAuth: payload\n      };\n    default:\n      return state;\n  }\n};\n","module.exports = __webpack_public_path__ + \"static/media/wave.2b8196a5.svg\";","module.exports = __webpack_public_path__ + \"static/media/play.65f03140.svg\";","module.exports = __webpack_public_path__ + \"static/media/pause.a61933e8.svg\";","module.exports = __webpack_public_path__ + \"static/media/readed.c1f419d6.svg\";","module.exports = __webpack_public_path__ + \"static/media/noreaded.3c841bf6.svg\";","var map = {\n\t\"./\": 91,\n\t\"./attachments\": 257,\n\t\"./attachments.js\": 257,\n\t\"./dialogs\": 258,\n\t\"./dialogs.js\": 258,\n\t\"./index\": 91,\n\t\"./index.js\": 91,\n\t\"./messages\": 259,\n\t\"./messages.js\": 259,\n\t\"./user\": 260,\n\t\"./user.js\": 260\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 659;","import axios from \"axios\";\n\naxios.defaults.baseURL = window.location.origin;\naxios.defaults.headers.common[\"token\"] = window.localStorage.token;\n\nwindow.axios = axios;\n\nexport default axios;\n","import { axios } from \"core\";\n\nexport default {\n  getAll: () => axios.get(\"/dialogs\"),\n  create: ({ partner, text }) => axios.post(\"/dialogs\", { partner, text })\n};\n","import { axios } from \"core\";\n\nexport default {\n  getAllByDialogId: id => axios.get(\"/messages?dialog=\" + id),\n  removeById: id => axios.delete(\"/messages?id=\" + id),\n  send: (text, dialogId, attachments) =>\n    axios.post(\"/messages\", {\n      text: text,\n      dialog_id: dialogId,\n      attachments\n    })\n};\n","import { axios } from \"core\";\n\nexport default {\n  signIn: postData => axios.post(\"/user/signin\", postData),\n  signUp: postData => axios.post(\"/user/signup\", postData),\n  verifyHash: hash => axios.get(\"/user/verify?hash=\" + hash),\n  getMe: () => axios.get(\"/user/me\"),\n  findUsers: query => axios.get(\"/user/find?query=\" + query)\n};\n","import { axios } from \"core\";\n\nexport default {\n  upload: file => {\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    return axios.post(\"/files\", formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    });\n  }\n};\n","import io from \"socket.io-client\";\n\nconst socket = io(window.location.origin.replace(\"3000\", \"3003\"));\n\nexport default socket;\n","import { dialogsApi } from 'utils/api';\nimport socket from 'core/socket';\n\nconst Actions = {\n  setDialogs: items => ({\n    type: 'DIALOGS:SET_ITEMS',\n    payload: items,\n  }),\n  updateReadedStatus: ({ userId, dialogId }) => ({\n    type: 'DIALOGS:LAST_MESSAGE_READED_STATUS',\n    payload: {\n      userId,\n      dialogId,\n    },\n  }),\n  setCurrentDialogId: id => dispatch => {\n    socket.emit('DIALOGS:JOIN', id);\n    dispatch({\n      type: 'DIALOGS:SET_CURRENT_DIALOG_ID',\n      payload: id,\n    });\n  },\n  fetchDialogs: () => dispatch => {\n    dialogsApi.getAll().then(({ data }) => {\n      dispatch(Actions.setDialogs(data));\n    });\n  },\n};\n\nexport default Actions;\n","import { messagesApi } from \"utils/api\";\n\nconst Actions = {\n  setMessages: items => ({\n    type: \"MESSAGES:SET_ITEMS\",\n    payload: items\n  }),\n  addMessage: message => (dispatch, getState) => {\n    const { dialogs } = getState();\n    const { currentDialogId } = dialogs;\n\n    if (currentDialogId === message.dialog._id) {\n      dispatch({\n        type: \"MESSAGES:ADD_MESSAGE\",\n        payload: message\n      });\n    }\n  },\n  fetchSendMessage: ({ text, dialogId, attachments }) => dispatch => {\n    return messagesApi.send(text, dialogId, attachments);\n  },\n  setIsLoading: bool => ({\n    type: \"MESSAGES:SET_IS_LOADING\",\n    payload: bool\n  }),\n  removeMessageById: id => dispatch => {\n    if (window.confirm(\"Вы действительно хотите удалить сообщение?\")) {\n      messagesApi\n        .removeById(id)\n        .then(({ data }) => {\n          dispatch({\n            type: \"MESSAGES:REMOVE_MESSAGE\",\n            payload: id\n          });\n        })\n        .catch(() => {\n          dispatch(Actions.setIsLoading(false));\n        });\n    }\n  },\n  fetchMessages: dialogId => dispatch => {\n    dispatch(Actions.setIsLoading(true));\n    messagesApi\n      .getAllByDialogId(dialogId)\n      .then(({ data }) => {\n        dispatch(Actions.setMessages(data));\n      })\n      .catch(() => {\n        dispatch(Actions.setIsLoading(false));\n      });\n  }\n};\n\nexport default Actions;\n","export default (key, touched, errors) => {\n  if (touched[key]) {\n    if (errors[key]) {\n      return \"error\";\n    } else {\n      return \"success\";\n    }\n  } else {\n    return \"\";\n  }\n};\n","import { notification } from 'antd';\n\nexport default ({ text, type = 'info', title, duration = 3 }) =>\n  notification[type]({\n    message: title,\n    description: text,\n    duration,\n  });\n","export default attachments => {\n  if (!attachments) {\n    return null;\n  }\n  const file = attachments[0];\n  return attachments.length && file.ext === \"webm\";\n};\n","import { openNotification } from 'utils/helpers';\nimport { userApi } from 'utils/api';\n\nconst Actions = {\n  setUserData: data => ({\n    type: 'USER:SET_DATA',\n    payload: data,\n  }),\n  setIsAuth: bool => ({\n    type: 'USER:SET_IS_AUTH',\n    payload: bool,\n  }),\n  fetchUserData: () => dispatch => {\n    userApi\n      .getMe()\n      .then(({ data }) => {\n        dispatch(Actions.setUserData(data));\n      })\n      .catch(err => {\n        if (err.response.status === 403) {\n          dispatch(Actions.setIsAuth(false));\n          delete window.localStorage.token;\n        }\n      });\n  },\n  fetchUserLogin: postData => dispatch => {\n    return userApi\n      .signIn(postData)\n      .then(({ data }) => {\n        const { token } = data;\n        openNotification({\n          title: 'Отлично!',\n          text: 'Авторизация успешна.',\n          type: 'success',\n        });\n        window.axios.defaults.headers.common['token'] = token;\n        window.localStorage['token'] = token;\n        dispatch(Actions.fetchUserData());\n        dispatch(Actions.setIsAuth(true));\n        return data;\n      })\n      .catch(({ response }) => {\n        openNotification({\n          title: 'Ошибка при авторизации',\n          text: 'Неверный логин или пароль',\n          type: 'error',\n        });\n      });\n  },\n  fetchUserRegister: postData => () => {\n    return userApi.signUp(postData);\n  },\n};\n\nexport default Actions;\n","const Actions = {\n  setAttachments: items => ({\n    type: \"ATTACHMENTS:SET_ITEMS\",\n    payload: items\n  }),\n  removeAttachment: file => ({\n    type: \"ATTACHMENTS:REMOVE_ITEM\",\n    payload: file\n  })\n};\n\nexport default Actions;\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { dialogsActions } from 'redux/actions';\nimport socket from 'core/socket';\n\nimport { Dialogs as BaseDialogs } from 'components';\n\nconst Dialogs = ({ fetchDialogs, updateReadedStatus, currentDialogId, items, userId }) => {\n  const [inputValue, setValue] = useState('');\n  const [filtred, setFiltredItems] = useState(Array.from(items));\n\n  const onChangeInput = (value = '') => {\n    setFiltredItems(\n      items.filter(\n        dialog =>\n          dialog.author.fullname.toLowerCase().indexOf(value.toLowerCase()) >= 0 ||\n          dialog.partner.fullname.toLowerCase().indexOf(value.toLowerCase()) >= 0,\n      ),\n    );\n    setValue(value);\n  };\n\n  window.fetchDialogs = fetchDialogs;\n\n  useEffect(() => {\n    if (items.length) {\n      onChangeInput();\n    }\n  }, [items]);\n\n  useEffect(() => {\n    fetchDialogs();\n\n    socket.on('SERVER:DIALOG_CREATED', fetchDialogs);\n    socket.on('SERVER:NEW_MESSAGE', fetchDialogs);\n    socket.on('SERVER:MESSAGES_READED', updateReadedStatus);\n    return () => {\n      socket.removeListener('SERVER:DIALOG_CREATED', fetchDialogs);\n      socket.removeListener('SERVER:NEW_MESSAGE', fetchDialogs);\n    };\n  }, []);\n\n  return (\n    <BaseDialogs\n      userId={userId}\n      items={filtred}\n      onSearch={onChangeInput}\n      inputValue={inputValue}\n      currentDialogId={currentDialogId}\n    />\n  );\n};\n\nexport default connect(\n  ({ dialogs }) => dialogs,\n  dialogsActions,\n)(Dialogs);\n","import React, { useEffect, useState, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { Empty } from 'antd';\nimport find from 'lodash/find';\n\nimport { messagesActions } from 'redux/actions';\nimport socket from 'core/socket';\n\nimport { Messages as BaseMessages } from 'components';\n\nconst Dialogs = ({\n  currentDialog,\n  fetchMessages,\n  addMessage,\n  items,\n  user,\n  isLoading,\n  removeMessageById,\n  attachments,\n}) => {\n  if (!currentDialog) {\n    return <Empty description=\"Откройте диалог\" />;\n  }\n\n  const [previewImage, setPreviewImage] = useState(null);\n  const [blockHeight, setBlockHeight] = useState(135);\n  const [isTyping, setIsTyping] = useState(false);\n  let typingTimeoutId = null;\n\n  const messagesRef = useRef(null);\n\n  const onNewMessage = data => {\n    addMessage(data);\n  };\n\n  const toggleIsTyping = () => {\n    setIsTyping(true);\n    clearInterval(typingTimeoutId);\n    typingTimeoutId = setTimeout(() => {\n      setIsTyping(false);\n    }, 3000);\n  };\n\n  useEffect(() => {\n    socket.on('DIALOGS:TYPING', toggleIsTyping);\n  }, []);\n\n  useEffect(() => {\n    if (attachments.length) {\n      setBlockHeight(245);\n    } else {\n      setBlockHeight(135);\n    }\n  }, [attachments]);\n\n  useEffect(() => {\n    if (currentDialog) {\n      fetchMessages(currentDialog._id);\n    }\n\n    socket.on('SERVER:NEW_MESSAGE', onNewMessage);\n\n    return () => socket.removeListener('SERVER:NEW_MESSAGE', onNewMessage);\n  }, [currentDialog]);\n\n  useEffect(() => {\n    messagesRef.current.scrollTo(0, 999999);\n  }, [items, isTyping]);\n\n  return (\n    <BaseMessages\n      user={user}\n      blockRef={messagesRef}\n      items={items}\n      isLoading={isLoading && !user}\n      onRemoveMessage={removeMessageById}\n      setPreviewImage={setPreviewImage}\n      previewImage={previewImage}\n      blockHeight={blockHeight}\n      isTyping={isTyping}\n      partner={\n        user._id !== currentDialog.partner._id ? currentDialog.author : currentDialog.partner\n      }\n    />\n  );\n};\n\nexport default connect(\n  ({ dialogs, messages, user, attachments }) => ({\n    currentDialog: find(dialogs.items, { _id: dialogs.currentDialogId }),\n    items: messages.items,\n    isLoading: messages.isLoading,\n    attachments: attachments.items,\n    user: user.data,\n  }),\n  messagesActions,\n)(Dialogs);\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { filesApi } from 'utils/api';\nimport socket from 'core/socket';\n\nimport { ChatInput as ChatInputBase } from 'components';\n\nimport { messagesActions, attachmentsActions } from 'redux/actions';\n\nconst ChatInput = props => {\n  const {\n    dialogs: { currentDialogId },\n    attachments,\n    fetchSendMessage,\n    setAttachments,\n    removeAttachment,\n    user,\n  } = props;\n\n  if (!currentDialogId) {\n    return null;\n  }\n\n  window.navigator.getUserMedia =\n    window.navigator.getUserMedia ||\n    window.navigator.mozGetUserMedia ||\n    window.navigator.msGetUserMedia ||\n    window.navigator.webkitGetUserMedia;\n\n  const [value, setValue] = useState('');\n  const [isRecording, setIsRecording] = useState('');\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const [emojiPickerVisible, setShowEmojiPicker] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n\n  const toggleEmojiPicker = () => {\n    setShowEmojiPicker(!emojiPickerVisible);\n  };\n\n  const onRecord = () => {\n    if (navigator.getUserMedia) {\n      navigator.getUserMedia({ audio: true }, onRecording, onError);\n    }\n  };\n\n  const onRecording = stream => {\n    const recorder = new MediaRecorder(stream);\n    setMediaRecorder(recorder);\n\n    recorder.start();\n\n    recorder.onstart = () => {\n      setIsRecording(true);\n    };\n\n    recorder.onstop = () => {\n      setIsRecording(false);\n    };\n\n    recorder.ondataavailable = e => {\n      const file = new File([e.data], 'audio.webm');\n      setLoading(true);\n      filesApi.upload(file).then(({ data }) => {\n        sendAudio(data.file._id).then(() => {\n          setLoading(false);\n        });\n      });\n    };\n  };\n\n  const onError = err => {\n    console.log('The following error occured: ' + err);\n  };\n\n  const handleOutsideClick = (el, e) => {\n    if (el && !el.contains(e.target)) {\n      setShowEmojiPicker(false);\n    }\n  };\n\n  const addEmoji = ({ colons }) => {\n    setValue((value + ' ' + colons).trim());\n  };\n\n  const sendAudio = audioId => {\n    return fetchSendMessage({\n      text: null,\n      dialogId: currentDialogId,\n      attachments: [audioId],\n    });\n  };\n\n  const sendMessage = () => {\n    if (isRecording) {\n      mediaRecorder.stop();\n    } else if (value || attachments.length) {\n      fetchSendMessage({\n        text: value,\n        dialogId: currentDialogId,\n        attachments: attachments.map(file => file.uid),\n      });\n      setValue('');\n      setAttachments([]);\n    }\n  };\n\n  const handleSendMessage = e => {\n    socket.emit('DIALOGS:TYPING', { dialogId: currentDialogId, user });\n    if (e.keyCode === 13) {\n      sendMessage();\n    }\n  };\n\n  const onHideRecording = () => {\n    setIsRecording(false);\n  };\n\n  const onSelectFiles = async files => {\n    let uploaded = [];\n    for (let i = 0; i < files.length; i++) {\n      const file = files[i];\n      const uid = Math.round(Math.random() * 1000);\n      uploaded = [\n        ...uploaded,\n        {\n          uid,\n          name: file.name,\n          status: 'uploading',\n        },\n      ];\n      setAttachments(uploaded);\n      // eslint-disable-next-line no-loop-func\n      await filesApi.upload(file).then(({ data }) => {\n        uploaded = uploaded.map(item => {\n          if (item.uid === uid) {\n            return {\n              status: 'done',\n              uid: data.file._id,\n              name: data.file.filename,\n              url: data.file.url,\n            };\n          }\n          return item;\n        });\n      });\n    }\n    setAttachments(uploaded);\n  };\n\n  useEffect(() => {\n    const el = document.querySelector('.chat-input__smile-btn');\n    document.addEventListener('click', handleOutsideClick.bind(this, el));\n    return () => {\n      document.removeEventListener('click', handleOutsideClick.bind(this, el));\n    };\n  }, []);\n\n  return (\n    <ChatInputBase\n      value={value}\n      setValue={setValue}\n      emojiPickerVisible={emojiPickerVisible}\n      toggleEmojiPicker={toggleEmojiPicker}\n      addEmoji={addEmoji}\n      handleSendMessage={handleSendMessage}\n      sendMessage={sendMessage}\n      onSelectFiles={onSelectFiles}\n      attachments={attachments}\n      isRecording={isRecording}\n      onRecord={onRecord}\n      onHideRecording={onHideRecording}\n      isLoading={isLoading}\n      removeAttachment={removeAttachment}\n    />\n  );\n};\n\nexport default connect(\n  ({ dialogs, attachments, user }) => ({\n    dialogs,\n    attachments: attachments.items,\n    user: user.data,\n  }),\n  { ...messagesActions, ...attachmentsActions },\n)(ChatInput);\n","import React from \"react\";\nimport { Status as StatusBase } from \"components\";\nimport { connect } from \"react-redux\";\n\nconst Status = ({ currentDialogId, user, dialogs }) => {\n  if (!dialogs.length || !currentDialogId) {\n    return null;\n  }\n\n  const currentDialogObj = dialogs.filter(\n    dialog => dialog._id === currentDialogId\n  )[0];\n\n  let partner = {};\n\n  if (currentDialogObj.author._id === user._id) {\n    partner = currentDialogObj.partner;\n  } else {\n    partner = currentDialogObj.author;\n  }\n\n  return <StatusBase online={partner.isOnline} fullname={partner.fullname} />;\n};\n\nexport default connect(({ dialogs, user }) => ({\n  dialogs: dialogs.items,\n  currentDialogId: dialogs.currentDialogId,\n  user: user.data\n}))(Status);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { userApi, dialogsApi } from \"utils/api\";\n\nimport { Sidebar } from \"components\";\n\nconst SidebarContainer = ({ user }) => {\n  const [visible, setVisible] = useState(false);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [messageText, setMessagaText] = useState(\"\");\n  const [users, setUsers] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedUserId, setSelectedUserId] = useState(false);\n\n  const onClose = () => {\n    setVisible(false);\n  };\n\n  const onShow = () => {\n    setVisible(true);\n  };\n\n  const onSearch = value => {\n    setIsLoading(true);\n    userApi\n      .findUsers(value)\n      .then(({ data }) => {\n        setUsers(data);\n        setIsLoading(false);\n      })\n      .catch(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const onAddDialog = () => {\n    dialogsApi\n      .create({\n        partner: selectedUserId,\n        text: messageText\n      })\n      .then(onClose)\n      .catch(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const handleChangeInput = value => {\n    setInputValue(value);\n  };\n\n  const onChangeTextArea = e => {\n    setMessagaText(e.target.value);\n  };\n\n  const onSelectUser = userId => {\n    setSelectedUserId(userId);\n  };\n\n  return (\n    <Sidebar\n      user={user}\n      inputValue={inputValue}\n      visible={visible}\n      isLoading={isLoading}\n      onClose={onClose}\n      onShow={onShow}\n      onSearch={onSearch}\n      onChangeInput={handleChangeInput}\n      onSelectUser={onSelectUser}\n      onModalOk={onAddDialog}\n      onChangeTextArea={onChangeTextArea}\n      messageText={messageText}\n      selectedUserId={selectedUserId}\n      users={users}\n    />\n  );\n};\n\nexport default connect(({ user }) => ({ user: user.data }))(SidebarContainer);\n","import React from 'react';\nimport { Icon, Button, Modal, Select, Input, Form } from 'antd';\nimport { Dialogs } from 'containers';\n\nimport './Sidebar.scss';\n\nconst { Option } = Select;\nconst { TextArea } = Input;\n\nconst Sidebar = ({\n  user,\n  visible,\n  inputValue,\n  messageText,\n  selectedUserId,\n  isLoading,\n  users,\n  onShow,\n  onClose,\n  onSearch,\n  onChangeInput,\n  onSelectUser,\n  onChangeTextArea,\n  onModalOk,\n}) => {\n  const options = users.map(user => <Option key={user._id}>{user.fullname}</Option>);\n\n  return (\n    <div className=\"chat__sidebar\">\n      <div className=\"chat__sidebar-header\">\n        <div>\n          <Icon type=\"team\" />\n          <span>Список диалогов</span>\n        </div>\n        <Button onClick={onShow} type=\"link\" shape=\"circle\" icon=\"form\" />\n      </div>\n\n      <div className=\"chat__sidebar-dialogs\">\n        <Dialogs userId={user && user._id} />\n      </div>\n      <Modal\n        title=\"Создать диалог\"\n        visible={visible}\n        onCancel={onClose}\n        footer={[\n          <Button key=\"back\" onClick={onClose}>\n            Закрыть\n          </Button>,\n          <Button\n            disabled={!messageText}\n            key=\"submit\"\n            type=\"primary\"\n            loading={isLoading}\n            onClick={onModalOk}>\n            Создать\n          </Button>,\n        ]}>\n        <Form className=\"add-dialog-form\">\n          <Form.Item label=\"Введите имя пользователя или E-Mail\">\n            <Select\n              value={inputValue}\n              onSearch={onSearch}\n              onChange={onChangeInput}\n              onSelect={onSelectUser}\n              notFoundContent={null}\n              style={{ width: '100%' }}\n              defaultActiveFirstOption={false}\n              showArrow={false}\n              filterOption={false}\n              placeholder=\"Введите имя пользователя или почту\"\n              showSearch>\n              {options}\n            </Select>\n          </Form.Item>\n          {selectedUserId && (\n            <Form.Item label=\"Введите текст сообщения\">\n              <TextArea\n                autosize={{ minRows: 3, maxRows: 10 }}\n                onChange={onChangeTextArea}\n                value={messageText}\n              />\n            </Form.Item>\n          )}\n        </Form>\n      </Modal>\n    </div>\n  );\n};\n\nSidebar.defaultProps = {\n  users: [],\n};\n\nexport default Sidebar;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button as BaseButton } from \"antd\";\nimport classNames from \"classnames\";\n\nimport \"./Button.scss\";\n\nconst Button = props => (\n  <BaseButton\n    {...props}\n    className={classNames(\"button\", props.className, {\n      \"button--large\": props.size === \"large\"\n    })}\n  />\n);\n\nButton.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Button;\n","import React from \"react\";\nimport classNames from \"classnames\";\n\nimport \"./Block.scss\";\n\nconst Block = ({ children, className }) => (\n  <div className={classNames(\"block\", className)}>{children}</div>\n);\n\nexport default Block;\n","import React, { useState, useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Popover, Button, Icon } from 'antd';\nimport { Emoji } from 'emoji-mart';\nimport reactStringReplace from 'react-string-replace';\n\nimport { convertCurrentTime, isAudio } from 'utils/helpers';\n\nimport waveSvg from 'assets/img/wave.svg';\nimport playSvg from 'assets/img/play.svg';\nimport pauseSvg from 'assets/img/pause.svg';\n\nimport { Time, IconReaded, Avatar } from '../';\n\nimport './Message.scss';\n\nconst MessageAudio = ({ audioSrc }) => {\n  const audioElem = useRef(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [currentTime, setCurrentTime] = useState(0);\n\n  const togglePlay = () => {\n    if (!isPlaying) {\n      audioElem.current.play();\n    } else {\n      audioElem.current.pause();\n    }\n  };\n\n  useEffect(() => {\n    audioElem.current.volume = '0.01';\n    audioElem.current.addEventListener(\n      'playing',\n      () => {\n        setIsPlaying(true);\n      },\n      false,\n    );\n    audioElem.current.addEventListener(\n      'ended',\n      () => {\n        setIsPlaying(false);\n        setProgress(0);\n        setCurrentTime(0);\n      },\n      false,\n    );\n    audioElem.current.addEventListener(\n      'pause',\n      () => {\n        setIsPlaying(false);\n      },\n      false,\n    );\n    audioElem.current.addEventListener('timeupdate', () => {\n      const duration = (audioElem.current && audioElem.current.duration) || 0;\n      setCurrentTime(audioElem.current.currentTime);\n      setProgress((audioElem.current.currentTime / duration) * 100);\n    });\n  }, []);\n\n  return (\n    <div className=\"message__audio\">\n      <audio ref={audioElem} src={audioSrc} preload=\"auto\" />\n      <div className=\"message__audio-progress\" style={{ width: progress + '%' }} />\n      <div className=\"message__audio-info\">\n        <div className=\"message__audio-btn\">\n          <button onClick={togglePlay}>\n            {isPlaying ? (\n              <img src={pauseSvg} alt=\"Pause svg\" />\n            ) : (\n              <img src={playSvg} alt=\"Play svg\" />\n            )}\n          </button>\n        </div>\n        <div className=\"message__audio-wave\">\n          <img src={waveSvg} alt=\"Wave svg\" />\n        </div>\n        <span className=\"message__audio-duration\">{convertCurrentTime(currentTime)}</span>\n      </div>\n    </div>\n  );\n};\n\nconst Message = ({\n  avatar,\n  user,\n  text,\n  date,\n  isMe,\n  readed,\n  attachments,\n  isTyping,\n  onRemoveMessage,\n  setPreviewImage,\n}) => {\n  const renderAttachment = item => {\n    if (item.ext !== 'webm') {\n      return (\n        <div\n          key={item._id}\n          onClick={() => setPreviewImage(item.url)}\n          className=\"message__attachments-item\">\n          <div className=\"message__attachments-item-overlay\">\n            <Icon type=\"eye\" style={{ color: 'white', fontSize: 18 }} />\n          </div>\n\n          <img src={item.url} alt={item.filename} />\n        </div>\n      );\n    } else {\n      return <MessageAudio key={item._id} audioSrc={item.url} />;\n    }\n  };\n\n  return (\n    <div\n      className={classNames('message', {\n        'message--isme': isMe,\n        'message--is-typing': isTyping,\n        'message--is-audio': isAudio(attachments),\n        'message--image': !isAudio(attachments) && attachments && attachments.length === 1 && !text,\n      })}>\n      <div className=\"message__content\">\n        <IconReaded isMe={isMe} isReaded={readed} />\n        <Popover\n          content={\n            <div>\n              <Button onClick={onRemoveMessage}>Удалить сообщение</Button>\n            </div>\n          }\n          trigger=\"click\">\n          <div className=\"message__icon-actions\">\n            <Button type=\"link\" shape=\"circle\" icon=\"ellipsis\" />\n          </div>\n        </Popover>\n        <div className=\"message__avatar\">\n          <Avatar user={user} />\n        </div>\n        <div className=\"message__info\">\n          {(text || isTyping) && (\n            <div className=\"message__bubble\">\n              {text && (\n                <p className=\"message__text\">\n                  {reactStringReplace(text, /:(.+?):/g, (match, i) => (\n                    <Emoji key={i} emoji={match} set=\"apple\" size={16} />\n                  ))}\n                </p>\n              )}\n              {isTyping && (\n                <div className=\"message__typing\">\n                  <span />\n                  <span />\n                  <span />\n                </div>\n              )}\n              {false && <MessageAudio audioSrc={null} />}\n            </div>\n          )}\n\n          {attachments && (\n            <div className=\"message__attachments\">\n              {attachments.map(item => renderAttachment(item))}\n            </div>\n          )}\n\n          {date && (\n            <span className=\"message__date\">\n              <Time date={date} />\n            </span>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nMessage.defaultProps = {\n  user: {},\n};\n\nMessage.propTypes = {\n  avatar: PropTypes.string,\n  text: PropTypes.string,\n  date: PropTypes.string,\n  user: PropTypes.object,\n  attachments: PropTypes.array,\n  isMe: PropTypes.bool,\n  isReaded: PropTypes.bool,\n  isTyping: PropTypes.bool,\n  audio: PropTypes.string,\n};\n\nexport default Message;\n","export default number => {\n  const mins = Math.floor(number / 60);\n  const secs = (number % 60).toFixed();\n  return `${mins < 10 ? \"0\" : \"\"}${mins}:${secs < 10 ? \"0\" : \"\"}${secs}`;\n};\n","import React from 'react';\nimport { Modal } from 'antd';\nimport PropTypes from 'prop-types';\nimport { Empty, Spin } from 'antd';\nimport classNames from 'classnames';\n\nimport { Message } from '../';\n\nimport './Messages.scss';\n\nconst Messages = ({\n  onRemoveMessage,\n  blockRef,\n  isLoading,\n  items,\n  user,\n  previewImage,\n  setPreviewImage,\n  blockHeight,\n  isTyping,\n  partner,\n}) => {\n  return (\n    <div className=\"chat__dialog-messages\" style={{ height: `calc(100% - ${blockHeight}px)` }}>\n      <div ref={blockRef} className={classNames('messages', { 'messages--loading': isLoading })}>\n        {isLoading && !user ? (\n          <Spin size=\"large\" tip=\"Загрузка сообщений...\" />\n        ) : items && !isLoading ? (\n          items.length > 0 ? (\n            items.map(item => (\n              <Message\n                {...item}\n                isMe={user._id === item.user._id}\n                onRemoveMessage={onRemoveMessage.bind(this, item._id)}\n                setPreviewImage={setPreviewImage}\n                key={item._id}\n              />\n            ))\n          ) : (\n            <Empty description=\"Диалог пуст\" />\n          )\n        ) : (\n          <Empty description=\"Откройте диалог\" />\n        )}\n        {isTyping && <Message isTyping={true} user={partner} />}\n        <Modal visible={!!previewImage} onCancel={() => setPreviewImage(null)} footer={null}>\n          <img src={previewImage} style={{ width: '100%' }} alt=\"Preview\" />\n        </Modal>\n      </div>\n    </div>\n  );\n};\n\nMessages.propTypes = {\n  items: PropTypes.array,\n};\n\nexport default Messages;\n","import React from 'react';\nimport classNames from 'classnames';\nimport format from 'date-fns/format';\nimport isToday from 'date-fns/is_today';\nimport { Link } from 'react-router-dom';\n\nimport { IconReaded, Avatar } from '../';\n\nconst getMessageTime = createdAt => {\n  if (isToday(createdAt)) {\n    return format(createdAt, 'HH:mm');\n  } else {\n    return format(createdAt, 'DD.MM.YYYY');\n  }\n};\n\nconst renderLastMessage = (message, userId) => {\n  let text = '';\n  if (!message.text && message.attachments.length) {\n    text = 'прикрепленный файл';\n  } else {\n    text = message.text;\n  }\n\n  return `${message.user._id === userId ? 'Вы: ' : ''}${text}`;\n};\n\nconst DialogItem = ({\n  _id,\n  undread,\n  created_at,\n  text,\n  isMe,\n  currentDialogId,\n  partner,\n  lastMessage,\n  userId,\n}) => (\n  <Link to={`/dialog/${_id}`}>\n    <div\n      className={classNames('dialogs__item', {\n        'dialogs__item--online': partner.isOnline,\n        'dialogs__item--selected': currentDialogId === _id,\n      })}>\n      <div className=\"dialogs__item-avatar\">\n        <Avatar user={partner} />\n      </div>\n      <div className=\"dialogs__item-info\">\n        <div className=\"dialogs__item-info-top\">\n          <b>{partner.fullname}</b>\n          <span>{getMessageTime(lastMessage.createdAt)}</span>\n        </div>\n        <div className=\"dialogs__item-info-bottom\">\n          <p>{renderLastMessage(lastMessage, userId)}</p>\n          {isMe && <IconReaded isMe={isMe} isReaded={lastMessage.readed} />}\n          {lastMessage.undread > 0 && (\n            <div className=\"dialogs__item-info-bottom-count\">\n              {lastMessage.undread > 9 ? '+9' : lastMessage.undread}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  </Link>\n);\n\nexport default DialogItem;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport distanceInWordsToNow from \"date-fns/distance_in_words_to_now\";\nimport ruLocale from \"date-fns/locale/ru\";\n\nconst Time = ({ date }) => (\n  <Fragment>\n    {distanceInWordsToNow(date, { addSuffix: true, locale: ruLocale })}\n  </Fragment>\n);\n\nTime.propTypes = {\n  date: PropTypes.string\n};\n\nexport default Time;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport readedSvg from \"assets/img/readed.svg\";\nimport noReadedSvg from \"assets/img/noreaded.svg\";\n\nconst IconReaded = ({ isMe, isReaded }) =>\n  (isMe &&\n    (isReaded ? (\n      <img className=\"message__icon-readed\" src={readedSvg} alt=\"Readed icon\" />\n    ) : (\n      <img\n        className=\"message__icon-readed message__icon-readed--no\"\n        src={noReadedSvg}\n        alt=\"No readed icon\"\n      />\n    ))) ||\n  null;\n\nIconReaded.propTypes = {\n  isMe: PropTypes.bool,\n  isReaded: PropTypes.bool\n};\n\nexport default IconReaded;\n","import React from \"react\";\nimport orderBy from \"lodash/orderBy\";\nimport { Input, Empty } from \"antd\";\n\nimport { DialogItem } from \"../\";\n\nimport \"./Dialogs.scss\";\n\nconst Dialogs = ({ items, userId, onSearch, inputValue, currentDialogId }) => (\n  <div className=\"dialogs\">\n    <div className=\"dialogs__search\">\n      <Input.Search\n        placeholder=\"Поиск среди контактов\"\n        onChange={e => onSearch(e.target.value)}\n        value={inputValue}\n      />\n    </div>\n    {items.length ? (\n      orderBy(items, [\"created_at\"], [\"desc\"]).map(item => (\n        <DialogItem\n          key={item._id}\n          isMe={item.author._id === userId}\n          userId={userId}\n          currentDialogId={currentDialogId}\n          {...item}\n        />\n      ))\n    ) : (\n      <Empty\n        image={Empty.PRESENTED_IMAGE_SIMPLE}\n        description=\"Ничего не найдено\"\n      />\n    )}\n  </div>\n);\n\nexport default Dialogs;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { generateAvatarFromHash } from \"utils/helpers\";\n\nimport \"./Avatar.scss\";\n\nconst Avatar = ({ user }) => {\n  if (user.avatar) {\n    return (\n      <img\n        className=\"avatar\"\n        src={user.avatar}\n        alt={`Avatar ${user.fullname}`}\n      />\n    );\n  } else {\n    const { color, colorLighten } = generateAvatarFromHash(user._id);\n    const firstChar = user.fullname[0].toUpperCase();\n    return (\n      <div\n        style={{\n          background: `linear-gradient(135deg, ${color} 0%, ${colorLighten} 96.52%)`\n        }}\n        className=\"avatar avatar--symbol\"\n      >\n        {firstChar}\n      </div>\n    );\n  }\n};\n\nAvatar.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Avatar;\n","import tinycolor from \"tinycolor2\";\n\nconst getCorrectIndex = number => {\n  if (number > 255) {\n    return 255;\n  }\n  if (number < 0) {\n    return 0;\n  }\n  return number > 255 ? 255 : number < 0 ? 0 : number;\n};\n\nexport default hash => {\n  const [r, g, b] = hash\n    .substr(0, 3)\n    .split(\"\")\n    .map(char => getCorrectIndex(char.charCodeAt(0)));\n\n  return {\n    color: tinycolor({ r, g, b })\n      .lighten(10)\n      .saturate(10)\n      .toHexString(),\n    colorLighten: tinycolor({ r, g, b })\n      .lighten(30)\n      .saturate(30)\n      .toHexString()\n  };\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport { Button, Popover } from 'antd';\n\nimport './Status.scss';\n\nconst Status = ({ online, fullname }) => (\n  <div className=\"chat__dialog-header\">\n    <div className=\"chat__dialog-header-center\">\n      <b className=\"chat__dialog-header-username\">{fullname}</b>\n      <div className=\"chat__dialog-header-status\">\n        <span className={classNames('status', { 'status--online': online })}>\n          {online ? 'онлайн' : 'офлайн'}\n        </span>\n      </div>\n    </div>\n    <Popover\n      className=\"chat__dialog-header-action\"\n      content={\n        <div>\n          <Button>Удалить диалог</Button>\n        </div>\n      }\n      trigger=\"click\">\n      <div>\n        <Button type=\"link\" shape=\"circle\" icon=\"ellipsis\" />\n      </div>\n    </Popover>\n  </div>\n);\n\nStatus.propTypes = {\n  online: PropTypes.bool,\n};\n\nexport default Status;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Input } from \"antd\";\nimport { UploadField } from \"@navjobs/upload\";\nimport { Picker } from \"emoji-mart\";\n\nimport { UploadFiles } from \"components\";\n\nimport \"./ChatInput.scss\";\n\nconst { TextArea } = Input;\n\nconst ChatInput = props => {\n  const {\n    emojiPickerVisible,\n    value,\n    addEmoji,\n    setValue,\n    handleSendMessage,\n    sendMessage,\n    toggleEmojiPicker,\n    attachments,\n    onSelectFiles,\n    isRecording,\n    onRecord,\n    onHideRecording,\n    removeAttachment,\n    isLoading\n  } = props;\n\n  return (\n    <Fragment>\n      <div className=\"chat-input\">\n        <div>\n          <div className=\"chat-input__smile-btn\">\n            <div className=\"chat-input__emoji-picker\">\n              {emojiPickerVisible && (\n                <Picker onSelect={emojiTag => addEmoji(emojiTag)} set=\"apple\" />\n              )}\n            </div>\n            <Button\n              onClick={toggleEmojiPicker}\n              type=\"link\"\n              shape=\"circle\"\n              icon=\"smile\"\n            />\n          </div>\n          {isRecording ? (\n            <div className=\"chat-input__record-status\">\n              <i className=\"chat-input__record-status-bubble\"></i>\n              Recording...\n              <Button\n                onClick={onHideRecording}\n                type=\"link\"\n                shape=\"circle\"\n                icon=\"close\"\n                className=\"stop-recording\"\n              />\n            </div>\n          ) : (\n            <TextArea\n              onChange={e => setValue(e.target.value)}\n              onKeyUp={handleSendMessage}\n              size=\"large\"\n              placeholder=\"Введите текст сообщения…\"\n              value={value}\n              autosize={{ minRows: 1, maxRows: 6 }}\n            />\n          )}\n\n          <div className=\"chat-input__actions\">\n            <UploadField\n              onFiles={onSelectFiles}\n              containerProps={{\n                className: \"chat-input__actions-upload-btn\"\n              }}\n              uploadProps={{\n                accept: \".jpg,.jpeg,.png,.gif,.bmp\",\n                multiple: \"multiple\"\n              }}\n            >\n              <Button type=\"link\" shape=\"circle\" icon=\"camera\" />\n            </UploadField>\n            {isLoading ? (\n              <Button type=\"link\" shape=\"circle\" icon=\"loading\" />\n            ) : isRecording || value || attachments.length ? (\n              <Button\n                onClick={sendMessage}\n                type=\"link\"\n                shape=\"circle\"\n                icon=\"check-circle\"\n              />\n            ) : (\n              <div className=\"chat-input__record-btn\">\n                <Button\n                  onClick={onRecord}\n                  type=\"link\"\n                  shape=\"circle\"\n                  icon=\"audio\"\n                />\n              </div>\n            )}\n          </div>\n        </div>\n        {attachments.length > 0 && (\n          <div className=\"chat-input__attachments\">\n            <UploadFiles\n              removeAttachment={removeAttachment}\n              attachments={attachments}\n            />\n          </div>\n        )}\n      </div>\n    </Fragment>\n  );\n};\n\nChatInput.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ChatInput;\n","import React from \"react\";\nimport { Form, Icon, Input } from \"antd\";\n\nimport { validateField } from \"utils/helpers\";\n\nconst FormField = ({\n  name,\n  placeholder,\n  icon,\n  type,\n  handleChange,\n  handleBlur,\n  touched,\n  errors,\n  values\n}) => {\n  return (\n    <Form.Item\n      validateStatus={validateField(name, touched, errors)}\n      help={!touched[name] ? \"\" : errors[name]}\n      hasFeedback\n    >\n      <Input\n        id={name}\n        prefix={<Icon type={icon} style={{ color: \"rgba(0,0,0,.25)\" }} />}\n        size=\"large\"\n        placeholder={placeholder}\n        value={values[name]}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        type={type}\n      />\n    </Form.Item>\n  );\n};\n\nexport default FormField;\n","import React, { useState, useEffect } from \"react\";\nimport { Upload, Modal } from \"antd\";\n\nfunction getBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = error => reject(error);\n  });\n}\n\nconst UploadFiles = ({ attachments, removeAttachment }) => {\n  const [state, setState] = useState({\n    previewVisible: false,\n    previewImage: \"\",\n    fileList: attachments\n  });\n\n  useEffect(() => {\n    setState({\n      ...state,\n      fileList: attachments\n    });\n  }, [attachments]);\n\n  const handleCancel = () => setState({ ...state, previewVisible: false });\n\n  const handlePreview = async file => {\n    if (!file.url && !file.preview) {\n      file.preview = await getBase64(file.originFileObj);\n    }\n\n    setState({\n      ...state,\n      previewImage: file.url || file.preview,\n      previewVisible: true\n    });\n  };\n\n  const handleChange = ({ fileList }) =>\n    setState({\n      ...state,\n      fileList\n    });\n\n  return (\n    <div className=\"clearfix\">\n      <Upload\n        action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n        listType=\"picture-card\"\n        fileList={state.fileList}\n        onPreview={handlePreview}\n        onChange={handleChange}\n        onRemove={file => removeAttachment(file)}\n      />\n      <Modal\n        visible={state.previewVisible}\n        footer={null}\n        onCancel={handleCancel}\n      >\n        <img alt=\"example\" style={{ width: \"100%\" }} src={state.previewImage} />\n      </Modal>\n    </div>\n  );\n};\n\nUploadFiles.defaultProps = {\n  attachments: []\n};\n\nexport default UploadFiles;\n","import React from \"react\";\nimport { Form, Icon, Input } from \"antd\";\nimport { Link } from \"react-router-dom\";\n\nimport { Button, Block } from \"components\";\nimport { validateField } from \"utils/helpers\";\n\nconst LoginForm = props => {\n  const {\n    values,\n    touched,\n    errors,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    isValid,\n    isSubmitting\n  } = props;\n  return (\n    <div>\n      <div className=\"auth__top\">\n        <h2>Войти в аккаунт</h2>\n        <p>Пожалуйста, войдите в свой аккаунт</p>\n      </div>\n      <Block>\n        <Form onSubmit={handleSubmit} className=\"login-form\">\n          <Form.Item\n            validateStatus={validateField(\"email\", touched, errors)}\n            help={!touched.email ? \"\" : errors.email}\n            hasFeedback\n          >\n            <Input\n              id=\"email\"\n              prefix={<Icon type=\"mail\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n              size=\"large\"\n              placeholder=\"E-Mail\"\n              value={values.email}\n              onChange={handleChange}\n              onBlur={handleBlur}\n            />\n          </Form.Item>\n          <Form.Item\n            validateStatus={validateField(\"password\", touched, errors)}\n            help={!touched.password ? \"\" : errors.password}\n            hasFeedback\n          >\n            <Input\n              id=\"password\"\n              prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n              size=\"large\"\n              type=\"password\"\n              placeholder=\"Пароль\"\n              value={values.password}\n              onChange={handleChange}\n              onBlur={handleBlur}\n            />\n          </Form.Item>\n          <Form.Item>\n            {isSubmitting && !isValid && <span>Ошибка!</span>}\n            <Button\n              disabled={isSubmitting}\n              onClick={handleSubmit}\n              type=\"primary\"\n              size=\"large\"\n            >\n              Войти в аккаунт\n            </Button>\n          </Form.Item>\n          <Link className=\"auth__register-link\" to=\"/signup\">\n            Зарегистрироваться\n          </Link>\n        </Form>\n      </Block>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","export default ({ isAuth, values, errors }) => {\n  const rules = {\n    email: value => {\n      if (!value) {\n        errors.email = \"Введите E-Mail\";\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\n        errors.email = \"Неверный E-Mail\";\n      }\n    },\n    password: value => {\n      if (!value) {\n        errors.password = \"Введите пароль\";\n      } else if (\n        !isAuth &&\n        !/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/.test(value)\n      ) {\n        errors.password = \"Слишком лёгкий пароль\";\n      }\n    },\n    password_2: value => {\n      if (!isAuth && value !== values.password) {\n        errors.password_2 = \"Пароли не совпадают\";\n      }\n    },\n    fullname: value => {\n      if (!isAuth && !value) {\n        errors.fullname = \"Укажите свое имя и фамилию\";\n      }\n    }\n  };\n\n  Object.keys(values).forEach(key => rules[key] && rules[key](values[key]));\n};\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport rootReducer from \"./reducers\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import LoginForm from \"./containers/LoginForm\";\n\nexport default LoginForm;\n","import { withFormik } from 'formik';\n\nimport LoginForm from '../components/LoginForm';\n\nimport validateForm from 'utils/validate';\nimport { userActions } from 'redux/actions';\n\nimport store from 'redux/store';\n\nconst LoginFormContainer = withFormik({\n  enableReinitialize: true,\n  mapPropsToValues: () => ({\n    email: '',\n    password: '',\n  }),\n  validate: values => {\n    let errors = {};\n\n    validateForm({ isAuth: true, values, errors });\n\n    return errors;\n  },\n  handleSubmit: (values, { setSubmitting, props }) => {\n    store\n      .dispatch(userActions.fetchUserLogin(values))\n      .then(({ status }) => {\n        if (status === 'success') {\n          props.history.push('/');\n        }\n        setSubmitting(false);\n      })\n      .catch(() => {\n        setSubmitting(false);\n      });\n  },\n  displayName: 'LoginForm',\n})(LoginForm);\n\nexport default LoginFormContainer;\n","import React from \"react\";\nimport { Form, Icon } from \"antd\";\nimport { Link } from \"react-router-dom\";\n\nimport { Button, Block, FormField } from \"components\";\n\nconst success = false;\n\nconst RegisterForm = props => {\n  const {\n    values,\n    touched,\n    errors,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    isValid,\n    isSubmitting\n  } = props;\n  return (\n    <div>\n      <div className=\"auth__top\">\n        <h2>Регистрация</h2>\n        <p>Для входа в чат, вам нужно зарегистрироваться</p>\n      </div>\n      <Block>\n        {!success ? (\n          <Form onSubmit={handleSubmit} className=\"login-form\">\n            <FormField\n              name=\"email\"\n              icon=\"mail\"\n              placeholder=\"E-Mail\"\n              handleChange={handleChange}\n              handleBlur={handleBlur}\n              touched={touched}\n              errors={errors}\n              values={values}\n            />\n\n            <FormField\n              name=\"fullname\"\n              icon=\"user\"\n              placeholder=\"Ваше имя и фамилия\"\n              handleChange={handleChange}\n              handleBlur={handleBlur}\n              touched={touched}\n              errors={errors}\n              values={values}\n            />\n\n            <FormField\n              name=\"password\"\n              icon=\"lock\"\n              placeholder=\"Пароль\"\n              type=\"password\"\n              handleChange={handleChange}\n              handleBlur={handleBlur}\n              touched={touched}\n              errors={errors}\n              values={values}\n            />\n\n            <FormField\n              name=\"password_2\"\n              icon=\"lock\"\n              placeholder=\"Повторите пароль\"\n              type=\"password\"\n              handleChange={handleChange}\n              handleBlur={handleBlur}\n              touched={touched}\n              errors={errors}\n              values={values}\n            />\n\n            <Form.Item>\n              {isSubmitting && !isValid && <span>Ошибка!</span>}\n              <Button\n                disabled={isSubmitting}\n                onClick={handleSubmit}\n                type=\"primary\"\n                size=\"large\"\n              >\n                Зарегистрироваться\n              </Button>\n            </Form.Item>\n            <Link className=\"auth__register-link\" to=\"/signin\">\n              Войти в аккаунт\n            </Link>\n          </Form>\n        ) : (\n          <div className=\"auth__success-block\">\n            <div>\n              <Icon type=\"info-circle\" theme=\"twoTone\" />\n            </div>\n            <h2>Подтвердите свой аккаунт</h2>\n            <p>\n              На Вашу почту отправлено письмо с ссылкой на подтверждение\n              аккаунта.\n            </p>\n          </div>\n        )}\n      </Block>\n    </div>\n  );\n};\n\nexport default RegisterForm;\n","import RegisterForm from \"./containers/RegisterForm\";\n\nexport default RegisterForm;\n","import { withFormik } from 'formik';\nimport get from 'lodash/get';\n\nimport RegisterForm from '../components/RegisterForm';\n\nimport { userActions } from 'redux/actions';\nimport validateForm from 'utils/validate';\nimport { openNotification } from 'utils/helpers';\n\nimport store from 'redux/store';\n\nexport default withFormik({\n  enableReinitialize: true,\n  mapPropsToValues: () => ({\n    email: '',\n    fullname: '',\n    password: '',\n    password_2: ''\n  }),\n  validate: values => {\n    let errors = {};\n    validateForm({ isAuth: false, values, errors });\n    return errors;\n  },\n  handleSubmit: (values, { setSubmitting, props }) => {\n    store\n      .dispatch(userActions.fetchUserRegister(values))\n      .then(() => {\n        props.history.push('/signup/verify');\n        setSubmitting(false);\n      })\n      .catch(err => {\n        if (get(err, 'response.data.message.errmsg', '').indexOf('dup') >= 0) {\n          openNotification({\n            title: 'Ошибка',\n            text: 'Аккаунт с такой почтой уже создан.',\n            type: 'error',\n            duration: 5000\n          });\n        } else {\n          openNotification({\n            title: 'Ошибка',\n            text: 'Возникла серверная ошибка при регистрации. Повторите позже.',\n            type: 'error',\n            duration: 5000\n          });\n        }\n        setSubmitting(false);\n      });\n  },\n  displayName: 'RegisterForm'\n})(RegisterForm);\n","import React, { useEffect, useState } from 'react';\nimport { Result, Button, Spin } from 'antd';\n\nimport { userApi } from 'utils/api';\nimport { Block } from 'components';\n\nconst renderTextInfo = ({ hash, verified }) => {\n  if (hash) {\n    if (verified) {\n      return {\n        status: 'success',\n        title: 'Готово!',\n        message: 'Аккаунт успешно подтвержден!',\n      };\n    } else {\n      return {\n        status: 'error',\n        title: 'Ошибка',\n        message: 'Вы указали несуществующий или неверный хеш.',\n      };\n    }\n  } else {\n    return {\n      status: 'info',\n      title: 'Подтвердите почту',\n      message: 'Ссылка с подтверждением аккаунта отправлена на E-Mail.',\n    };\n  }\n};\n\nconst CheckEmailInfo = ({ location, history }) => {\n  const hash = location.search.split('hash=')[1];\n  const [verified, setVerified] = useState(false);\n  const [checking, setChecking] = useState(!!hash);\n  const [info, setInfo] = useState(renderTextInfo({ hash, checking, verified }));\n\n  const setStatus = ({ checking, verified }) => {\n    setInfo(renderTextInfo({ hash, checking, verified }));\n    setVerified(verified);\n    setChecking(checking);\n  };\n\n  useEffect(() => {\n    if (hash) {\n      userApi\n        .verifyHash(hash)\n        .then(() => {\n          setStatus({ verified: true, checking: false });\n        })\n        .catch(() => {\n          setStatus({ verified: false, checking: false });\n        });\n    }\n  }, []);\n\n  console.log({ info, checking, verified, hash });\n\n  return (\n    <div className=\"verify-block\">\n      <Block>\n        {!checking ? (\n          <Result\n            status={info.status}\n            title={info.title}\n            subTitle={info.message}\n            extra={\n              info.status === 'success' &&\n              verified && (\n                <Button type=\"primary\" onClick={() => history.push('/signin')}>\n                  Войти\n                </Button>\n              )\n            }\n          />\n        ) : (\n          <div className=\"verify-block__loading\">\n            <Spin size=\"large\" />\n          </div>\n        )}\n      </Block>\n    </div>\n  );\n};\n\nexport default CheckEmailInfo;\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\n\nimport { LoginForm, RegisterForm } from \"modules\";\nimport CheckEmailInfo from \"./components/CheckEmailInfo\";\n\nimport \"./Auth.scss\";\n\nconst Auth = () => (\n  <section className=\"auth\">\n    <div className=\"auth__content\">\n      <Route exact path=\"/signin\" component={LoginForm} />\n      <Route exact path=\"/signup\" component={RegisterForm} />\n      <Route exact path=\"/signup/verify\" component={CheckEmailInfo} />\n    </div>\n  </section>\n);\n\nexport default Auth;\n","import React, { useEffect } from 'react';\nimport { withRouter } from 'react-router';\nimport { Messages, ChatInput, Status, Sidebar } from 'containers';\nimport { connect } from 'react-redux';\n\nimport './Home.scss';\n\nimport { dialogsActions } from 'redux/actions';\n\nconst Home = props => {\n  const { setCurrentDialogId, user } = props;\n  useEffect(() => {\n    const { pathname } = props.location;\n    const dialogId = pathname.split('/').pop();\n    setCurrentDialogId(dialogId);\n  }, [props.location.pathname]);\n\n  return (\n    <section className=\"home\">\n      <div className=\"chat\">\n        <Sidebar />\n        {user && (\n          <div className=\"chat__dialog\">\n            <Status />\n            <Messages />\n            <div className=\"chat__dialog-input\">\n              <ChatInput />\n            </div>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default withRouter(\n  connect(\n    ({ user }) => ({ user: user.data }),\n    dialogsActions,\n  )(Home),\n);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\n\nimport { Auth, Home } from \"pages\";\n\nconst App = props => {\n  const { isAuth } = props;\n  return (\n    <div className=\"wrapper\">\n      <Switch>\n        <Route\n          exact\n          path={[\"/signin\", \"/signup\", \"/signup/verify\"]}\n          component={Auth}\n        />\n        <Route\n          path=\"/\"\n          render={() => (isAuth ? <Home /> : <Redirect to=\"/signin\" />)}\n        />\n      </Switch>\n    </div>\n  );\n};\n\nexport default connect(({ user }) => ({ isAuth: user.isAuth }))(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\n\nimport App from \"./App\";\nimport { userActions } from \"redux/actions\";\n\nimport store from \"redux/store\";\n\nimport \"./styles/index.scss\";\nimport \"emoji-mart/css/emoji-mart.css\";\n\nstore.dispatch(userActions.fetchUserData());\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","import { combineReducers } from \"redux\";\n\nconst reducers = [\"messages\", \"dialogs\", \"user\", \"attachments\"];\n\nexport default combineReducers(\n  reducers.reduce((initial, name) => {\n    initial[name] = require(`./${name}`).default;\n    return initial;\n  }, {})\n);\n"],"sourceRoot":""}